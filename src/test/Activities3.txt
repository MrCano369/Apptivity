import { useEffect, useState } from "react";
import useAuth from "../../../auth/useAuth";
import useModal from "../../../hooks/useModal";
import CreateModal from "./CreateModal";
import DeleteModal from "./DeleteModal";

const data = [
  {
    id: 0,
    title: "Activity 1",
    days: [
      "Jul 3 2021",
      "Jul 4 2021",
      "Jul 5 2021",
      "Jul 6 2021",
      "Jul 7 2021",
      "Jul 8 2021",
      "Jul 9 2021",
      "Jul 10 2021",
      "Jul 11 2021",
      "Jul 12 2021",
      "Jul 13 2021",
    ],
    todayCheck: true,
  },
  {
    id: 1,
    title: "Activity 2",
    days: [
      "Jul 8 2021",
      "Jul 9 2021",
      "Jul 10 2021",
      "Jul 11 2021",
      "Jul 12 2021",
    ],
    todayCheck: false,
  },
  {
    id: 2,
    title: "Activity 3",
    days: [
      "Jul 3 2021",
      "Jul 4 2021",
      "Jul 5 2021",
      "Jul 6 2021",
      "Jul 7 2021",
      "Jul 8 2021",
      "Jul 9 2021",
      "Jul 10 2021",
      "Jul 11 2021",
      "Jul 12 2021",
    ],
    todayCheck: false,
  },
  {
    id: 3,
    title: "Activity 4",
    days: [],
    todayCheck: false,
  },
];

export default function Activities() {
  const formatter = new Intl.DateTimeFormat("default", { month: "short" });

  const [activities, setActivities] = useState([]);
  const [currentActivity, setCurrentActivity] = useState(null);
  const [createModalState, openCreadeModal, closeCreateModal] = useModal();
  const [deleteModalState, openDeleteModal, closeDeleteModal] = useModal();

  const handleDeleteActivity = (a) => {
    setCurrentActivity(a);
    openDeleteModal();
  };

  useEffect(() => {
    setActivities(data);
  }, []);

  const sendTodayCheck = (id) => {
    let nuevo = activities.map((a) => {
      if (a.id === id) {
        a.days.push("Jul 13 2021");
        a.todayCheck = true;
        return a;
      }
      return a;
    });
    setActivities(nuevo);
  };

  const { logout } = useAuth();

  return (
    <>
      <DeleteModal
        active={deleteModalState}
        close={closeDeleteModal}
        activity={currentActivity}
      />
      <CreateModal active={createModalState} close={closeCreateModal} />
      <div className="section hero">
        <header>
          <p className="title">My Activities</p>
          <button className="button is-danger" onClick={logout}>
            LogOut
          </button>
        </header>
        <div style={{ width: "100%", maxWidth: "800px", margin: "auto" }}>
          {activities.map((a) => {
            return (
              <div key={a.id} className="box">
                <div className="activityHeader">
                  <div>
                    <p className="title">{a.title}</p>
                    <p className="subtitle">Streak: {a.days.length} days</p>
                  </div>
                  <button
                    className="button is-danger"
                    onClick={() => handleDeleteActivity(a)}
                  >
                    <span className="icon is-small">
                      <i className="fas fa-trash"></i>
                    </span>
                  </button>
                </div>

                <div className="daysContainer">
                  {a.days.map((d) => {
                    let day = new Date(d);
                    return (
                      <div
                        key={d}
                        className="day"
                      >{`${day.getDate()}/${formatter.format(day)}`}</div>
                    );
                  })}
                </div>

                <div
                  className="has-text-centered"
                  style={{ marginTop: "10px" }}
                >
                  {a.todayCheck ? (
                    <button className="button is-static">Checked</button>
                  ) : (
                    <button
                      onClick={() => sendTodayCheck(a.id)}
                      className="button is-primary"
                    >
                      Check
                    </button>
                  )}
                </div>
              </div>
            );
          })}
          <div
            className="newActivity box has-text-centered"
            onClick={openCreadeModal}
          >
            New Activity
          </div>
        </div>
      </div>
    </>
  );
}
